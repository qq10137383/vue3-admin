{
  "compilerOptions": {
    // ts不转换es语法，交给babel转换
    "target": "esnext",
    // ts不转换esm为cjs，交给webpack转换
    "module": "esnext",
    // 启用严格模式
    "strict": true,
    // 启用jsx支持
    "jsx": "preserve",
    "importHelpers": true,
    // 模块查找使用node方式
    "moduleResolution": "node",
    "experimentalDecorators": true,
    "skipLibCheck": true,
    // 由于module设置为esnext，esm转cjs其实是由webpack执行的，这个设置无效，如果module为'commonjs'，这个设置才有效
    "esModuleInterop": true,
    // 导入cjs模块时，模块声明使用export=xx，导入使用import xx from 'xx'必须打开此开关
    "allowSyntheticDefaultImports": true,
    "sourceMap": true,
    "baseUrl": ".",
    "types": [
      // 引入node的types定义
      "node",
      // 引入webpack的types定义
      "webpack-env",
      // Volar插件支持
      "element-plus/global"
    ],
    "paths": {
      // webpack中定义了resolve.alias，打包@路径可以正确解析，但是ts并不知道@路径应该怎么解析
      // 所以会出现ts警告，这里定义了paths->"@/*"解决了ts查找@路径的问题
      "@/*": [
        "src/*"
      ]
    },
    "lib": [
      "esnext",
      "dom",
      "dom.iterable",
      "scripthost"
    ]
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}